# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  test:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.9
        environment:
        - NODE_ENV: development
        - AUTH_SERVICE_PORT: 4000
        - AUTH_SERVICE_JWT_MODE: hmac
        - JWT_SECRET: dumb-secret
        - AUTH_SERVICE_JWT_PRIVATE_KEY_PATH: private.key
        - AUTH_SERVICE_JWT_PUBLIC_KEY_PATH: private.key.pub
        - AUTH_SERVICE_JWT_TTL: 3600
        - AUTH_SERVICE_PG_DB: auth
        - AUTH_SERVICE_PG_PORT: 5432
        - AUTH_SERVICE_PG_HOST: 127.0.0.1
        - AUTH_SERVICE_PG_USER: auth
        - AUTH_SERVICE_PG_PASSWORD: postgres
        - AUTH_SERVICE_MAILER_EMAIL_ID: ''
        - AUTH_SERVICE_MAILER_PASSWORD: testpass
        - AUTH_SERVICE_MAILER_FROM_EMAIL_ADDRESS: ''
        - AUTH_SERVICE_MAILER_SERVICE_PROVIDER: Gmail
      - image: circleci/postgres:9.6.2-alpine
        environment:
        - POSTGRES_USER: auth
        - POSTGRES_DB: auth
        - POSTGRES_PASSWORD: postgres

    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn test:coverage
      - store_artifacts:
          path: coverage
          prefix: coverage

  publish:
    machine: true
    steps:
      - checkout
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker build -t amidatech/auth-service:$CIRCLE_BRANCH .
      - run: docker push amidatech/auth-service:$CIRCLE_BRANCH

  publish-release:
    machine: true
    steps:
      - checkout
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker build -t amidatech/auth-service:latest -t amidatech/auth-service:$CIRCLE_TAG .
      - run: docker push amidatech/auth-service:latest
      - run: docker push amidatech/auth-service:$CIRCLE_TAG

workflows:
  version: 2
  test-publish:
    jobs:
      - test
      - publish:
          context: docker
          requires:
            - test
          filters:
            branches:
              only:
                - develop
      - publish-release:
          context: docker
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
